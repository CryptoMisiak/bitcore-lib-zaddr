{
  "_args": [
    [
      {
        "raw": "through@https://registry.npmjs.org/through/-/through-1.1.2.tgz",
        "scope": null,
        "escapedName": "through",
        "name": "through",
        "rawSpec": "https://registry.npmjs.org/through/-/through-1.1.2.tgz",
        "spec": "https://registry.npmjs.org/through/-/through-1.1.2.tgz",
        "type": "remote"
      },
      "/home/hellomoto/bitcore-wallet-service/node_modules/bitcore-lib-cash"
    ]
  ],
  "_from": "through@https://registry.npmjs.org/through/-/through-1.1.2.tgz",
  "_id": "through@1.1.2",
  "_inCache": true,
  "_location": "/bitcore-lib-cash/split/through",
  "_phantomChildren": {},
  "_requested": {
    "raw": "through@https://registry.npmjs.org/through/-/through-1.1.2.tgz",
    "scope": null,
    "escapedName": "through",
    "name": "through",
    "rawSpec": "https://registry.npmjs.org/through/-/through-1.1.2.tgz",
    "spec": "https://registry.npmjs.org/through/-/through-1.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/bitcore-lib-cash/split"
  ],
  "_resolved": "https://registry.npmjs.org/through/-/through-1.1.2.tgz",
  "_shasum": "344a5425a3773314ca7e0eb6512fbafaf76c0bfe",
  "_shrinkwrap": null,
  "_spec": "through@https://registry.npmjs.org/through/-/through-1.1.2.tgz",
  "_where": "/home/hellomoto/bitcore-wallet-service/node_modules/bitcore-lib-cash",
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/through/issues"
  },
  "dependencies": {},
  "description": "simplified stream contruction",
  "devDependencies": {
    "assertions": "2",
    "asynct": "1",
    "stream-spec": "0"
  },
  "homepage": "http://github.com/dominictarr/through",
  "keywords": [
    "stream",
    "streams",
    "user-streams",
    "pipe"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "through",
  "optionalDependencies": {},
  "readme": "#through\n\n[![build status](https://secure.travis-ci.org/dominictarr/through.png)](http://travis-ci.org/dominictarr/through)\n\nEasy way to create a `Stream` that is both `readable` and `writable`. Pass in optional `write` and `end` methods. `through` takes care of pause/resume logic.\nUse `this.pause()` and `this.resume()` to manage flow.\nCheck `this.paused` to see current flow state. (write always returns `!this.paused`)\n\nthis function is the basis for most of the syncronous streams in [event-stream](http://github.com/dominictarr/event-stream).\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.emit('data', data)\n    //this.pause() \n  },\n  function end () { //optional\n    this.emit('end')\n  })\n\n```\n\nor, with buffering on pause, use `this.queue(data)`,\ndata *cannot* be `null`. `this.queue(null)` will emit 'end'\nwhen it gets to the `null` element.\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.queue(data)\n    //this.pause() \n  },\n  function end () { //optional\n    this.queue(null)\n  })\n\n```\n\n\n## License\n\nMIT / Apache2\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dominictarr/through.git"
  },
  "scripts": {
    "test": "asynct test/*.js"
  },
  "version": "1.1.2"
}
